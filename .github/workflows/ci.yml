name: CI/CD - Build, Test & Deploy Spring Boot

on:
  push:
    branches:
      - main  # Workflow sẽ chạy khi có code được đẩy lên nhánh `main`

jobs:
  test:
    runs-on: ubuntu-latest  # Chạy workflow trên môi trường Ubuntu mới nhất
    services:
      mysql:
        image: mysql:8  # Khởi chạy một container MySQL 8
        env:
          MYSQL_DATABASE: webtourism  # Tạo database có tên `webtourism`
          MYSQL_ROOT_PASSWORD: luanml001  # Đặt mật khẩu root (Lưu ý: Nên dùng GitHub Secrets thay vì để lộ trực tiếp)
        ports:
          - 3306:3306  # Mở cổng 3306 để Spring Boot có thể kết nối với MySQL
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=5s --health-timeout=5s --health-retries=40
        # Kiểm tra sức khỏe của MySQL, thử kết nối trong 40 lần với khoảng cách 5 giây

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Lấy code từ repository về môi trường runner

      - name: Setup JDK 17
        uses: actions/setup-java@v3  # Cài đặt Java JDK 17
        with:
          java-version: '17'
          distribution: 'temurin'  # Dùng Temurin JDK (phiên bản OpenJDK được bảo trì tốt)

      - name: Run Tests
        run: mvn test  # Chạy bộ test của Maven để kiểm tra code

      - name: Debug Surefire Test Reports
        if: failure()  # Nếu bước `mvn test` thất bại, in ra log test từ Surefire
        run: cat target/surefire-reports/*.txt || true

#
#  deploy:
#    needs: test  # Chỉ chạy job deploy nếu job test thành công
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Build with Maven
#        run: mvn clean package -DskipTests  # Build project mà không chạy lại test
#
#      - name: Deploy to Server
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Khóa SSH để truy cập server (lưu trong GitHub Secrets)
#          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}  # Địa chỉ máy chủ từ xa
#          REMOTE_USER: ${{ secrets.REMOTE_USER }}  # User SSH trên server
#          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}  # Thư mục đích trên server để đặt file JAR
#        run: |
#          mkdir -p ~/.ssh  # Tạo thư mục SSH nếu chưa có
#          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa  # Ghi khóa SSH vào file
#          chmod 600 ~/.ssh/id_rsa  # Đặt quyền truy cập an toàn
#          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts  # Lưu fingerprint của server vào danh sách trusted
#          scp target/*.jar $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR  # Copy file JAR lên server
#          ssh $REMOTE_USER@$REMOTE_HOST "sudo systemctl restart your-spring-boot-service"  # Restart service trên server
#
