name: CI/CD - Build, Test & Deploy Spring Boot
# on:
#  push:
#    branches:
#      - main  # Workflow sẽ chạy khi có code được đẩy lên nhánh `main`
on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: webtourism
          MYSQL_ROOT_PASSWORD: luanml001
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=5s --health-timeout=5s --health-retries=40

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Tests
        run: mvn test

      - name: Debug Surefire Test Reports
        if: failure()
        run: cat target/surefire-reports/*.txt || true

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Đảm bảo job test chạy xong trước

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project with Maven
        run: mvn clean package -DskipTests

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Test SSH connection
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "hostname"

      - name: Deploy .jar to server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          echo "Uploading to $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR"
          ls -l target
          JAR_FILE=$(ls target/*.jar | head -n1)
          echo "Found JAR: $JAR_FILE"
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "ls -ld $REMOTE_DIR || mkdir -p $REMOTE_DIR"
          sshpass -v -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no "$JAR_FILE" $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR

      # - name: Restart Spring Boot App
      #   env:
      #     SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      #     REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #     REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #     REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
      #   run: |
      #     sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST '
      #       echo "Killing old app if exists..."
      #       pkill -f "java -jar" || true
      #       cd $REMOTE_DIR
      #       echo "Starting new app..."
      #       nohup java -jar SpringBootJdk22-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
      #     '
